# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  update_submodules:
    steps:
      - run:
          name: Update Submodules
          command: |
            git submodule update --init --recursive
  build_install_and_presist_to_workspace:
    parameters:
      build_type:
        type: string
        default: Release
      target_system:
        type: string
        default: x86_64_ubuntu_bionic
    steps:
      - run:
          name: Build << parameters.build_type >> << parameters.target_system >>
          command: |
            cd $BUILD_DIR
            ninja -j7
      - run:
          name: Install << parameters.build_type >> << parameters.target_system >>
          command: |
            cd $BUILD_DIR
            /root/workspace/cmake/bin/cmake --install .
      - persist_to_workspace:
          root: ~/workspace/
          paths:
            - grpc_install/<< parameters.target_system >>-<< parameters.build_type >>

jobs:
  build_x86_64_ubuntu_bionic:
    parameters:
      build_type:
        type: string
        default: Release
      target_system:
        type: string
        default: x86_64_ubuntu_bionic
    docker:
      - image: rndottopia/ubuntu-cmake:18.04
        auth:
          username: ottopiarnd
          password: $DOCKERHUB_PASSWORD
    resource_class: xlarge
    working_directory: ~/workspace/grpc
    environment:
      BUILD_DIR: build-<< parameters.build_type >>-<< parameters.target_system >>
    steps:
      - checkout
      - update_submodules
      - run:
          name: Configure << parameters.build_type >> << parameters.target_system >>
          working_directory: ~/workspace/grpc
          command: |
            mkdir $BUILD_DIR
            cd $BUILD_DIR
            /root/workspace/cmake/bin/cmake -GNinja -DCMAKE_BUILD_TYPE=<< parameters.build_type >> -DBUILD_SHARED_LIBS=ON \
            -DgRPC_INSTALL=ON -DCMAKE_INSTALL_PREFIX=/root/workspace/grpc_install/<< parameters.target_system >>-<< parameters.build_type >> ..
      - build_install_and_presist_to_workspace:
          target_system: << parameters.target_system >>
          build_type: << parameters.build_type >>

  cross_compile:
    parameters:
      build_type:
        type: string
        default: Release
      target_system:
        type: string
        default: calmcar
    docker:
      - image: rndottopia/cross-platform-<< parameters.target_system >>:18.04
        auth:
          username: ottopiarnd
          password: $DOCKERHUB_PASSWORD
    resource_class: xlarge
    working_directory: ~/workspace/grpc
    environment:
      BUILD_DIR: build-<< parameters.build_type >>-<< parameters.target_system >>
      LD_LIBRARY_PATH: /root/workspace/grpc_install/x86_64_ubuntu_bionic-Release/lib
    steps:
      - checkout
      - attach_workspace:
          at: ../
      - update_submodules
      - run:
          name: Configure << parameters.build_type >> << parameters.target_system >>
          command: |
            mkdir $BUILD_DIR
            cd $BUILD_DIR
            /root/workspace/cmake/bin/cmake -GNinja -DCMAKE_BUILD_TYPE=<< parameters.build_type >> \
            -DCMAKE_TOOLCHAIN_FILE="/root/workspace/grpc/toolchain/arm-compile-<< parameters.target_system >>.cmake" \
            -DROOTFS=$ROOTFS -DCROSS_COMPILER_PATH=$TOOLCHAIN -DBUILD_SHARED_LIBS=ON -DgRPC_INSTALL=ON \
            -DCMAKE_INSTALL_PREFIX=/root/workspace/grpc_install/<< parameters.target_system >>-<< parameters.build_type >> \
            -D_gRPC_PROTOBUF_PROTOC_EXECUTABLE="/root/workspace/grpc_install/x86_64_ubuntu_bionic-Release/bin/protoc" \
            -D_gRPC_CPP_PLUGIN="/root/workspace/grpc_install/x86_64_ubuntu_bionic-Release/bin/grpc_cpp_plugin" ..
      - build_install_and_presist_to_workspace:
          target_system: << parameters.target_system >>
          build_type: << parameters.build_type >>

  upload_to_grpc_binary:
    docker:
      - image: cimg/base:stable-18.04
    resource_class: small
    working_directory: ~/workspace/grpc
    steps:
      - checkout
      - attach_workspace:
          at: ../
      - run:
          name: push to grpc-binary
          working_directory: ~/workspace
          command: |
            git clone git@github.com:ottopia-tech/grpc-binary.git
            chmod +x grpc/.circleci/check_if_branch_exists.sh
            chmod +x grpc/.circleci/upload_if_repo_change.sh
            cd grpc-binary
            ../grpc/.circleci/check_if_branch_exists.sh
            cp -R ~/workspace/grpc_install/* .
            git add .
            ../grpc/.circleci/upload_if_repo_change.sh

workflows:
  build_and_upload:
    jobs:
      - build_x86_64_ubuntu_bionic:
          name: build_x86_64_ubuntu_bionic-<< matrix.build_type >>
          context: orb_global
          matrix:
            parameters:
              build_type: [ "Release", "Debug"]
      - cross_compile:
          name: build_<< matrix.target_system >>-<< matrix.build_type >>
          context: orb_global
          matrix:
            parameters:
              build_type: [ "Release", "Debug"]
              target_system: [ "calmcar", "gateworks"]
          requires:
            - build_x86_64_ubuntu_bionic
      - hold:
          type: approval
      - upload_to_grpc_binary:
          requires:
            - hold
            - cross_compile
